version: '3.8'

services:
  # WireGuard VPN with Contract Integration for Phala Cloud
  wireguard-vpn:
    build:
      context: .
      dockerfile: docker/wireguard/Dockerfile
    container_name: wireguard-vpn-phala
    environment:
      - NODE_ID=${NODE_ID:-phala-vpn-node}
      - NETWORK=${NETWORK:-base}
      - SYNC_INTERVAL=${SYNC_INTERVAL:-30000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - RPC_URL=${RPC_URL}
      - CONTRACT_PRIVATE_KEY=${CONTRACT_PRIVATE_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - HEALTH_CHECK_PORT=8080
      - PHALA_DEPLOYMENT=true
      - TEE_ENVIRONMENT=true
    volumes:
      - ./config/phala:/etc/wireguard:ro
      - ./src:/app/src:ro
      - ./config:/app/config:ro
      - wireguard-logs:/var/log/wireguard
    ports:
      - "51820:51820/udp"
      - "8080:8080/tcp"
    networks:
      - vpn-network
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    privileged: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Mullvad Proxy for UDP-to-TCP tunneling
  mullvad-proxy:
    build:
      context: ./docker/mullvad-proxy
      dockerfile: Dockerfile
    container_name: mullvad-proxy-phala
    environment:
      - PROXY_PORT=1080
      - LOG_LEVEL=${LOG_LEVEL:-info}
    ports:
      - "1080:1080/tcp"
    networks:
      - vpn-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1080"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test nginx server for connectivity verification
  nginx-server:
    image: nginx:alpine
    container_name: nginx-server-phala
    networks:
      - vpn-network
    depends_on:
      wireguard-vpn:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test client for connectivity verification
  test-client:
    image: alpine:3.19
    container_name: test-client-phala
    networks:
      - vpn-network
    depends_on:
      wireguard-vpn:
        condition: service_healthy
    command: >
      sh -c "
        apk add --no-cache curl wget;
        echo 'Testing Phala Cloud VPN connectivity...';
        ping -c 3 10.0.0.1;
        echo 'Testing HTTP connectivity...';
        wget -qO- http://nginx-server-phala:80 || echo 'HTTP test failed';
        echo 'Testing bridge health...';
        curl -s http://wireguard-vpn-phala:8080/health || echo 'Health check failed';
        echo 'Testing TEE environment...';
        echo 'TEE_ENVIRONMENT: $TEE_ENVIRONMENT';
        echo 'PHALA_DEPLOYMENT: $PHALA_DEPLOYMENT';
        echo 'Test complete';
        sleep infinity;
      "
    restart: unless-stopped

volumes:
  wireguard-logs:

networks:
  vpn-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24 